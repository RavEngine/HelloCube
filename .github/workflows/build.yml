name: Build Sample for Android

on: [push, pull_request]

jobs:
  apk:
    name: Apk Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
          target: [Debug, Release]

    steps:
      - name: Get the Android Builder
        run: git clone https://github.com/RavEngine/sdl-android-builder
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          path: sdl-android-builder/to-build/HelloCube
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
            ndk-version: r28
      - name: Fix CMake min required
        run: |
            cd sdl-android-builder/to-build/HelloCube/RavEngine
            sed -i -e 's/3.25/3.22/' CMakeLists.txt

      - name: Build the APK
        run: |
          cd sdl-android-builder
          ./gradlew assemble${{ matrix.target }}

      - name: Copy Assets
        run: |
            cd sdl-android-builder/app/.cxx
            assets=sdl-android-builder/app/.cxx/`find . -name "main.rvedata" -print -quit`
            cd ../../../
            mkdir sdl-android-builder/app/src/main/assets/
            cp $assets sdl-android-builder/app/src/main/assets/

      - name: Build APK with Assets
        run: |
            cd sdl-android-builder
            ./gradlew assemble${{ matrix.target }}

      - name: Upload the APK
        uses: actions/upload-artifact@v4
        with: 
          name: app-${{matrix.target}}
          path: sdl-android-builder/app/build/outputs/apk/*

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix: 
        arch: [x64, ARM64]
        sdk: [Windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Configure
        run: |
          mkdir build
          cd build
          mkdir win 
          cd win
          cmake -A${{ matrix.arch }} -DCMAKE_SYSTEM_NAME=${{ matrix.sdk }} -DCMAKE_SYSTEM_VERSION="10.0" -DCMAKE_BUILD_TYPE=Release -DRAVENGINE_BUILD_TESTS=OFF ..\.. 
          cmake -Wno-dev ..\.. 
      - name: Build
        run: cd build; cd win; cmake --build . --config release --target install
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: RavEngine_Samples_Win${{ matrix.arch }}
          path: |
                build\win\release\*.exe 
                build\win\release\*.rvedata
                build\win\release\D3D12\
            
